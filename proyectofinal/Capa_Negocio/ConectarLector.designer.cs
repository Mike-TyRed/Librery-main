#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capa_Negocio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tablaprueba1")]
	public partial class ConectarLectorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertLibros(Libros instance);
    partial void UpdateLibros(Libros instance);
    partial void DeleteLibros(Libros instance);
    partial void InsertExistencia(Existencia instance);
    partial void UpdateExistencia(Existencia instance);
    partial void DeleteExistencia(Existencia instance);
    partial void InsertPedido(Pedido instance);
    partial void UpdatePedido(Pedido instance);
    partial void DeletePedido(Pedido instance);
    #endregion
		
		public ConectarLectorDataContext() : 
				base(global::Capa_Negocio.Properties.Settings.Default.tablaprueba1ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ConectarLectorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConectarLectorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConectarLectorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConectarLectorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Libros> Libros
		{
			get
			{
				return this.GetTable<Libros>();
			}
		}
		
		public System.Data.Linq.Table<Existencia> Existencia
		{
			get
			{
				return this.GetTable<Existencia>();
			}
		}
		
		public System.Data.Linq.Table<Pedido> Pedido
		{
			get
			{
				return this.GetTable<Pedido>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ActualizarLibro")]
		public int ActualizarLibro([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Titulo", DbType="VarChar(50)")] string titulo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Autor", DbType="VarChar(50)")] string autor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Edicion", DbType="VarChar(50)")] string edicion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Genero", DbType="VarChar(50)")] string genero, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDlibro", DbType="Int")] System.Nullable<int> iDlibro)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titulo, autor, edicion, genero, iDlibro);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ActualizarUsuario")]
		public int ActualizarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginName", DbType="VarChar(50)")] string loginName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telefono", DbType="VarChar(50)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginName, email, telefono, password, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllGeneros")]
		public ISingleResult<AllGenerosResult> AllGeneros()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<AllGenerosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EliminarLibro")]
		public int EliminarLibro([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDlibro", DbType="Int")] System.Nullable<int> iDlibro)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDlibro);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EliminarUsuario")]
		public int EliminarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertarLibro")]
		public int InsertarLibro([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Titulo", DbType="VarChar(100)")] string titulo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Autor", DbType="VarChar(50)")] string autor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Edicion", DbType="VarChar(50)")] string edicion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Genero", DbType="VarChar(50)")] string genero)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titulo, autor, edicion, genero);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertarUsuario")]
		public int InsertarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginName", DbType="VarChar(50)")] string loginName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telefono", DbType="VarChar(50)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cargo", DbType="VarChar(50)")] string cargo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginName, email, telefono, password, cargo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarDisponibles")]
		public ISingleResult<MostrarDisponiblesResult> MostrarDisponibles()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarDisponiblesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarGeneros")]
		public ISingleResult<MostrarGenerosResult> MostrarGeneros([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Genero", DbType="VarChar(50)")] string genero)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), genero);
			return ((ISingleResult<MostrarGenerosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarLibros")]
		public ISingleResult<MostrarLibrosResult> MostrarLibros()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarLibrosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarTítulos")]
		public ISingleResult<MostrarTítulosResult> MostrarTítulos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Titulo", DbType="VarChar(50)")] string titulo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titulo);
			return ((ISingleResult<MostrarTítulosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarUsuario")]
		public ISingleResult<MostrarUsuarioResult> MostrarUsuario()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarUsuarioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Stock")]
		public int Stock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Existentes", DbType="Int")] System.Nullable<int> existentes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Disponibles", DbType="Int")] System.Nullable<int> disponibles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rentados", DbType="Int")] System.Nullable<int> rentados)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), existentes, disponibles, rentados);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarPedidos")]
		public ISingleResult<MostrarPedidosResult> MostrarPedidos()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarPedidosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Devolucion")]
		public int Devolucion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Disponibles", DbType="Int")] System.Nullable<int> disponibles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDlibro", DbType="Int")] System.Nullable<int> iDlibro)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), disponibles, iDlibro);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Estados")]
		public int Estados([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estado", DbType="VarChar(50)")] string estado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDpedido", DbType="Int")] System.Nullable<int> iDpedido)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), estado, iDpedido);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ModificarDisponible")]
		public int ModificarDisponible([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Disponibles", DbType="Int")] System.Nullable<int> disponibles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDlibro", DbType="Int")] System.Nullable<int> iDlibro)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), disponibles, iDlibro);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NuevoPedido")]
		public int NuevoPedido([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDlibro", DbType="Int")] System.Nullable<int> iDlibro, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaPed", DbType="VarChar(50)")] string fechaPed, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaDev", DbType="VarChar(50)")] string fechaDev, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estado", DbType="VarChar(50)")] string estado)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, iDlibro, fechaPed, fechaDev, estado);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getIDuser")]
		public int getIDuser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginName", DbType="VarChar(50)")] string loginName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VerDisponiblesEsp")]
		public int VerDisponiblesEsp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDlibro", DbType="Int")] System.Nullable<int> iDlibro)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDlibro);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _LoginName;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _password;
		
		private string _Cargo;
		
		private EntitySet<Pedido> _Pedido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    #endregion
		
		public Users()
		{
			this._Pedido = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedido), new Action<Pedido>(this.detach_Pedido));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Pedido", Storage="_Pedido", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Pedido> Pedido
		{
			get
			{
				return this._Pedido;
			}
			set
			{
				this._Pedido.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Libros")]
	public partial class Libros : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDlibro;
		
		private string _Titulo;
		
		private string _Autor;
		
		private string _Edicion;
		
		private string _Genero;
		
		private EntityRef<Existencia> _Existencia;
		
		private EntitySet<Pedido> _Pedido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDlibroChanging(int value);
    partial void OnIDlibroChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnAutorChanging(string value);
    partial void OnAutorChanged();
    partial void OnEdicionChanging(string value);
    partial void OnEdicionChanged();
    partial void OnGeneroChanging(string value);
    partial void OnGeneroChanged();
    #endregion
		
		public Libros()
		{
			this._Existencia = default(EntityRef<Existencia>);
			this._Pedido = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedido), new Action<Pedido>(this.detach_Pedido));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					this.OnIDlibroChanging(value);
					this.SendPropertyChanging();
					this._IDlibro = value;
					this.SendPropertyChanged("IDlibro");
					this.OnIDlibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(40)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autor", DbType="VarChar(40)")]
		public string Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				if ((this._Autor != value))
				{
					this.OnAutorChanging(value);
					this.SendPropertyChanging();
					this._Autor = value;
					this.SendPropertyChanged("Autor");
					this.OnAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edicion", DbType="VarChar(40)")]
		public string Edicion
		{
			get
			{
				return this._Edicion;
			}
			set
			{
				if ((this._Edicion != value))
				{
					this.OnEdicionChanging(value);
					this.SendPropertyChanging();
					this._Edicion = value;
					this.SendPropertyChanged("Edicion");
					this.OnEdicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="VarChar(40)")]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this.OnGeneroChanging(value);
					this.SendPropertyChanging();
					this._Genero = value;
					this.SendPropertyChanged("Genero");
					this.OnGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_Existencia", Storage="_Existencia", ThisKey="IDlibro", OtherKey="IDlibro", IsUnique=true, IsForeignKey=false)]
		public Existencia Existencia
		{
			get
			{
				return this._Existencia.Entity;
			}
			set
			{
				Existencia previousValue = this._Existencia.Entity;
				if (((previousValue != value) 
							|| (this._Existencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Existencia.Entity = null;
						previousValue.Libros = null;
					}
					this._Existencia.Entity = value;
					if ((value != null))
					{
						value.Libros = this;
					}
					this.SendPropertyChanged("Existencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_Pedido", Storage="_Pedido", ThisKey="IDlibro", OtherKey="IDlibro")]
		public EntitySet<Pedido> Pedido
		{
			get
			{
				return this._Pedido;
			}
			set
			{
				this._Pedido.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Libros = this;
		}
		
		private void detach_Pedido(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Libros = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Existencia")]
	public partial class Existencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDlibro;
		
		private System.Nullable<int> _Existentes;
		
		private System.Nullable<int> _Disponibles;
		
		private System.Nullable<int> _Rentados;
		
		private EntityRef<Libros> _Libros;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDlibroChanging(int value);
    partial void OnIDlibroChanged();
    partial void OnExistentesChanging(System.Nullable<int> value);
    partial void OnExistentesChanged();
    partial void OnDisponiblesChanging(System.Nullable<int> value);
    partial void OnDisponiblesChanged();
    partial void OnRentadosChanging(System.Nullable<int> value);
    partial void OnRentadosChanged();
    #endregion
		
		public Existencia()
		{
			this._Libros = default(EntityRef<Libros>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					if (this._Libros.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDlibroChanging(value);
					this.SendPropertyChanging();
					this._IDlibro = value;
					this.SendPropertyChanged("IDlibro");
					this.OnIDlibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Existentes", DbType="Int")]
		public System.Nullable<int> Existentes
		{
			get
			{
				return this._Existentes;
			}
			set
			{
				if ((this._Existentes != value))
				{
					this.OnExistentesChanging(value);
					this.SendPropertyChanging();
					this._Existentes = value;
					this.SendPropertyChanged("Existentes");
					this.OnExistentesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disponibles", DbType="Int")]
		public System.Nullable<int> Disponibles
		{
			get
			{
				return this._Disponibles;
			}
			set
			{
				if ((this._Disponibles != value))
				{
					this.OnDisponiblesChanging(value);
					this.SendPropertyChanging();
					this._Disponibles = value;
					this.SendPropertyChanged("Disponibles");
					this.OnDisponiblesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rentados", DbType="Int")]
		public System.Nullable<int> Rentados
		{
			get
			{
				return this._Rentados;
			}
			set
			{
				if ((this._Rentados != value))
				{
					this.OnRentadosChanging(value);
					this.SendPropertyChanging();
					this._Rentados = value;
					this.SendPropertyChanged("Rentados");
					this.OnRentadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_Existencia", Storage="_Libros", ThisKey="IDlibro", OtherKey="IDlibro", IsForeignKey=true)]
		public Libros Libros
		{
			get
			{
				return this._Libros.Entity;
			}
			set
			{
				Libros previousValue = this._Libros.Entity;
				if (((previousValue != value) 
							|| (this._Libros.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Libros.Entity = null;
						previousValue.Existencia = null;
					}
					this._Libros.Entity = value;
					if ((value != null))
					{
						value.Existencia = this;
						this._IDlibro = value.IDlibro;
					}
					else
					{
						this._IDlibro = default(int);
					}
					this.SendPropertyChanged("Libros");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedido")]
	public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDpedido;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _IDlibro;
		
		private string _FechaPed;
		
		private string _FechaDev;
		
		private string _Estado;
		
		private EntityRef<Libros> _Libros;
		
		private EntityRef<Users> _Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDpedidoChanging(int value);
    partial void OnIDpedidoChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIDlibroChanging(System.Nullable<int> value);
    partial void OnIDlibroChanged();
    partial void OnFechaPedChanging(string value);
    partial void OnFechaPedChanged();
    partial void OnFechaDevChanging(string value);
    partial void OnFechaDevChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Pedido()
		{
			this._Libros = default(EntityRef<Libros>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDpedido
		{
			get
			{
				return this._IDpedido;
			}
			set
			{
				if ((this._IDpedido != value))
				{
					this.OnIDpedidoChanging(value);
					this.SendPropertyChanging();
					this._IDpedido = value;
					this.SendPropertyChanged("IDpedido");
					this.OnIDpedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", DbType="Int")]
		public System.Nullable<int> IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					if (this._Libros.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDlibroChanging(value);
					this.SendPropertyChanging();
					this._IDlibro = value;
					this.SendPropertyChanged("IDlibro");
					this.OnIDlibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPed", DbType="VarChar(40)")]
		public string FechaPed
		{
			get
			{
				return this._FechaPed;
			}
			set
			{
				if ((this._FechaPed != value))
				{
					this.OnFechaPedChanging(value);
					this.SendPropertyChanging();
					this._FechaPed = value;
					this.SendPropertyChanged("FechaPed");
					this.OnFechaPedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDev", DbType="VarChar(40)")]
		public string FechaDev
		{
			get
			{
				return this._FechaDev;
			}
			set
			{
				if ((this._FechaDev != value))
				{
					this.OnFechaDevChanging(value);
					this.SendPropertyChanging();
					this._FechaDev = value;
					this.SendPropertyChanged("FechaDev");
					this.OnFechaDevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(40)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_Pedido", Storage="_Libros", ThisKey="IDlibro", OtherKey="IDlibro", IsForeignKey=true)]
		public Libros Libros
		{
			get
			{
				return this._Libros.Entity;
			}
			set
			{
				Libros previousValue = this._Libros.Entity;
				if (((previousValue != value) 
							|| (this._Libros.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Libros.Entity = null;
						previousValue.Pedido.Remove(this);
					}
					this._Libros.Entity = value;
					if ((value != null))
					{
						value.Pedido.Add(this);
						this._IDlibro = value.IDlibro;
					}
					else
					{
						this._IDlibro = default(Nullable<int>);
					}
					this.SendPropertyChanged("Libros");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Pedido", Storage="_Users", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Pedido.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Pedido.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AllGenerosResult
	{
		
		private string _Genero;
		
		public AllGenerosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="VarChar(40)")]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this._Genero = value;
				}
			}
		}
	}
	
	public partial class MostrarDisponiblesResult
	{
		
		private System.Nullable<int> _Disponibles;
		
		public MostrarDisponiblesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disponibles", DbType="Int")]
		public System.Nullable<int> Disponibles
		{
			get
			{
				return this._Disponibles;
			}
			set
			{
				if ((this._Disponibles != value))
				{
					this._Disponibles = value;
				}
			}
		}
	}
	
	public partial class MostrarGenerosResult
	{
		
		private int _IDlibro;
		
		private string _Titulo;
		
		private string _Autor;
		
		private string _Edicion;
		
		private string _Genero;
		
		public MostrarGenerosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", DbType="Int NOT NULL")]
		public int IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					this._IDlibro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(40)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this._Titulo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autor", DbType="VarChar(40)")]
		public string Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				if ((this._Autor != value))
				{
					this._Autor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edicion", DbType="VarChar(40)")]
		public string Edicion
		{
			get
			{
				return this._Edicion;
			}
			set
			{
				if ((this._Edicion != value))
				{
					this._Edicion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="VarChar(40)")]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this._Genero = value;
				}
			}
		}
	}
	
	public partial class MostrarLibrosResult
	{
		
		private int _IDlibro;
		
		private string _Titulo;
		
		private string _Autor;
		
		private string _Edicion;
		
		private string _Genero;
		
		public MostrarLibrosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", DbType="Int NOT NULL")]
		public int IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					this._IDlibro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(40)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this._Titulo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autor", DbType="VarChar(40)")]
		public string Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				if ((this._Autor != value))
				{
					this._Autor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edicion", DbType="VarChar(40)")]
		public string Edicion
		{
			get
			{
				return this._Edicion;
			}
			set
			{
				if ((this._Edicion != value))
				{
					this._Edicion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="VarChar(40)")]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this._Genero = value;
				}
			}
		}
	}
	
	public partial class MostrarTítulosResult
	{
		
		private int _IDlibro;
		
		private string _Titulo;
		
		private string _Autor;
		
		private string _Edicion;
		
		private string _Genero;
		
		public MostrarTítulosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", DbType="Int NOT NULL")]
		public int IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					this._IDlibro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(40)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this._Titulo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autor", DbType="VarChar(40)")]
		public string Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				if ((this._Autor != value))
				{
					this._Autor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edicion", DbType="VarChar(40)")]
		public string Edicion
		{
			get
			{
				return this._Edicion;
			}
			set
			{
				if ((this._Edicion != value))
				{
					this._Edicion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="VarChar(40)")]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this._Genero = value;
				}
			}
		}
	}
	
	public partial class MostrarUsuarioResult
	{
		
		private int _UserID;
		
		private string _LoginName;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _password;
		
		private string _Cargo;
		
		public MostrarUsuarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this._LoginName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this._Cargo = value;
				}
			}
		}
	}
	
	public partial class MostrarPedidosResult
	{
		
		private int _IDpedido;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _IDlibro;
		
		private string _FechaPed;
		
		private string _FechaDev;
		
		private string _Estado;
		
		public MostrarPedidosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpedido", DbType="Int NOT NULL")]
		public int IDpedido
		{
			get
			{
				return this._IDpedido;
			}
			set
			{
				if ((this._IDpedido != value))
				{
					this._IDpedido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlibro", DbType="Int")]
		public System.Nullable<int> IDlibro
		{
			get
			{
				return this._IDlibro;
			}
			set
			{
				if ((this._IDlibro != value))
				{
					this._IDlibro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPed", DbType="VarChar(40)")]
		public string FechaPed
		{
			get
			{
				return this._FechaPed;
			}
			set
			{
				if ((this._FechaPed != value))
				{
					this._FechaPed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDev", DbType="VarChar(40)")]
		public string FechaDev
		{
			get
			{
				return this._FechaDev;
			}
			set
			{
				if ((this._FechaDev != value))
				{
					this._FechaDev = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(40)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this._Estado = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
